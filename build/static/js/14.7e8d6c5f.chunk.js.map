{"version":3,"sources":["views/pages/forgotpassword/forgotpassword.js","actions/authActions.js","config.js","utils/setAuthToken.js"],"names":["schema","email","presence","allowEmpty","message","length","maximum","ForgotPassword","props","useState","isValid","values","touched","errors","formState","setFormState","dispatch","useDispatch","useHistory","useEffect","validate","hasError","field","className","onSubmit","e","preventDefault","forgotPassword","htmlFor","type","id","name","placeholder","event","persist","target","checked","value","disabled","to","BASE_API_URL","Config","setCurrentUser","user","SET_CURRENT_USER","logout","history","localStorage","removeItem","setAuthorizationToken","push","toast","success","login","userData","axios","post","then","response","token","data","setItem","JSON","stringify","catch","err","error","Object","join","USER_LOGIN_FAILURE","setCurrentUserFails","getModelAssetsData","modelId","get","GET_ASSET_DATA","GET_ASSET_DATA_FAILS","updateModelAssetsData","stateId","UPDATE_ASSET_DATA_BEGINS","put","UPDATE_ASSET_DATA_SUCCESS","updateAssetData","errorMessage","UPDATE_ASSET_DATA_FAILS","updateAssetDataFails","inviteUser","INVITE_USER_BEGINS","INVITE_USER_SUCCESS","inviteUserSuccess","INVITE_USER_FAILURE","inviteUserFails","removeUser","REMOVE_USER_BEGINS","REMOVE_USER_SUCCESS","removeUserSuccess","REMOVE_USER_FAILURE","removeUserFails","changePassword","CHANGE_PASSWORD_BEGINS","status","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","changePasswordFails","FORGOT_PASSWORD_BEGINS","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","forgotPasswordFails","resetPassword","RESET_PASSWORD_BEGINS","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILURE","resetPasswordFails","getUsers","GET_USERS_BEGINS","GET_USERS_SUCCESS","GET_USERS_FAILURE","getUsersFails","getUser","userId","GET_USER_BEGINS","GET_USER_SUCCESS","GET_USER_FAILURE","getUserFails","deleteUser","DELETE_USER_BEGINS","delete","DELETE_USER_SUCCESS","console","log","DELETE_USER_FAILURE","deleteUserFails","updateUser","UPDATE_USER_BEGINS","UPDATE_USER_SUCCESS","updateUserSuccess","UPDATE_USER_FAILURE","updateUserFails","updateUserProfile","UPDATE_USER_PROFILE_BEGINS","UPDATE_USER_PROFILE_SUCCESS","updateUserProfileSuccess","UPDATE_USER_PROFILE_FAILURE","updateUserProfileFails","defaults","headers","common"],"mappings":"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","file":"static/js/14.7e8d6c5f.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router\";\nimport validate from \"validate.js\";\nimport {forgotPassword} from \"../../../actions/authActions\";\n\n\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true,\n    length: {\n      maximum: 64\n    }\n  }\n};\n\nconst ForgotPassword = props => {\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n\n  const handleForgotPassword = (e) => {\n    e.preventDefault();\n    dispatch(forgotPassword(formState.values));\n    setFormState({\n      isValid: false,\n      values: {},\n      touched: {},\n      errors: {}\n    });\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\nreturn (\n  <div className=\"px-5\">\n      <p className=\"text-center text-xl\">Forgot Password ?</p>\n      <p className=\"text-center text-md\">Please provide your email</p>\n      <form className=\"flex flex-col pt-3 md:pt-8\" onSubmit={handleForgotPassword}>\n          <div className=\"flex flex-col pt-4\">\n              <label htmlFor=\"email\" className=\"text-lg\">Email</label>\n              <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"your@email.com\" className=\"shadow appearance-none border rounded w-full py-3 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" name=\"email\" autoComplete=\"email address\" onChange={handleChange} value={formState.email} />\n              <span>{hasError && hasError['email']? formState.errors.email[0] : null} </span>\n          </div>\n\n          <input type=\"submit\" value=\"Submit\" className=\"loginButton text-white font-bold text-lg hover:bg-gray-700 p-2 mt-8\" disabled={!formState.isValid} />\n      </form>\n      <div className=\"text-center pt-5 pb-12\">\n          <p>Remember your password ? <Link to={\"/login\"} className=\"underline font-semibold\">Login</Link></p>\n      </div>\n  </div>\n)};\n\nexport default ForgotPassword\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\nimport Config from '../config';\n\nimport setAuthorizationToken from '../utils/setAuthToken';\n\n\nimport {\n  SET_CURRENT_USER,\n  USER_SIGNUP_SUCCESS,\n  USER_LOGIN_FAILURE, USER_SIGNUP_FAILURE,\n  INVITE_USER_BEGINS, INVITE_USER_FAILURE, INVITE_USER_SUCCESS,\n  REMOVE_USER_BEGINS, REMOVE_USER_SUCCESS, REMOVE_USER_FAILURE,\n  GET_ACCESS_TOKEN, GET_ACCESS_TOKEN_FAILURE,\n  GET_ASSET_DATA, GET_ASSET_DATA_FAILS,\n  UPDATE_ASSET_DATA_BEGINS,\n  UPDATE_ASSET_DATA_FAILS, UPDATE_ASSET_DATA_SUCCESS,\n  CHANGE_PASSWORD_BEGINS, CHANGE_PASSWORD_SUCCESS, CHANGE_PASSWORD_FAILURE,\n  FORGOT_PASSWORD_BEGINS, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAILURE,\n  RESET_PASSWORD_BEGINS, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAILURE,\n  GET_USERS_BEGINS, GET_USERS_SUCCESS, GET_USERS_FAILURE,\n  GET_USER_BEGINS, GET_USER_SUCCESS, GET_USER_FAILURE,\n  DELETE_USER_BEGINS, DELETE_USER_SUCCESS, DELETE_USER_FAILURE,\n  UPDATE_USER_BEGINS, UPDATE_USER_SUCCESS, UPDATE_USER_FAILURE,\n  UPDATE_USER_PROFILE_BEGINS, UPDATE_USER_PROFILE_SUCCESS, UPDATE_USER_PROFILE_FAILURE\n} from './actionTypes';\n\n\n// const BASE_API_URL = \"https://adims.herokuapp.com/api\";\nconst BASE_API_URL = Config.BASE_API_URL\n// \"https://advancedlogisticsapi-nqt92.ondigitalocean.app/api\";\n\n/**\n * @export\n * @param {{user: any}} user\n * @returns {{type: string, user: string}}  current user\n */\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {{type: string, error: any}} login failure error\n */\nexport function setCurrentUserFails(error) {\n  return {\n    type: USER_LOGIN_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any} message\n * @returns {message} signup success message\n */\nexport function setNewUser(message) {\n  return {\n    type: USER_SIGNUP_SUCCESS,\n    message\n  };\n}\n\n/**\n * @export\n * @param {any} message\n * @returns {message} signup success message\n */\nexport function setNewUserFails(message) {\n  return {\n    type: USER_SIGNUP_FAILURE,\n    message\n  };\n}\n\n/**\n * @export\n * @param {any} message\n * @returns {message} forge token success message\n */\nexport function getForgeAccessToken(token) {\n  return {\n    type: GET_ACCESS_TOKEN,\n    token\n  };\n}\n\n/**\n * @export\n * @param {any} message\n * @returns {message} signup success message\n */\nexport function getForgeAccessTokenFails(message) {\n  return {\n    type: GET_ACCESS_TOKEN_FAILURE,\n    message\n  };\n}\n\n/**\n * @export\n * @param {any} message\n * @returns {message} forge token success message\n */\nexport function getAssetData(data) {\n  return {\n    type: GET_ASSET_DATA,\n    data\n  };\n}\n\n/**\n * @export\n * @param {any} message\n * @returns {message} signup success message\n */\nexport function getAssetDataFails(message) {\n  return {\n    type: GET_ASSET_DATA_FAILS,\n    message\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} update access data begins\n */\nexport function updateAssetDataBegins() {\n  return {\n    type: UPDATE_ASSET_DATA_BEGINS,\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} forge token success message\n */\nexport function updateAssetData(message, data, id) {\n  return {\n    type: UPDATE_ASSET_DATA_SUCCESS,\n    message,\n    data,\n    id\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} error message\n */\nexport function updateAssetDataFails(error) {\n  return {\n    type: UPDATE_ASSET_DATA_FAILS,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} change password\n */\nexport function changePasswordBegins() {\n  return {\n    type: CHANGE_PASSWORD_BEGINS\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} change password success\n */\nexport function changePasswordSuccess(message) {\n  return {\n    type: CHANGE_PASSWORD_SUCCESS,\n    message,\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} change password failure\n */\nexport function changePasswordFails(error) {\n  return {\n    type: CHANGE_PASSWORD_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} forgot password\n */\nexport function forgotPasswordBegins() {\n  return {\n    type: FORGOT_PASSWORD_BEGINS\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} forgot password success\n */\nexport function forgotPasswordSuccess(message) {\n  return {\n    type: FORGOT_PASSWORD_SUCCESS,\n    message,\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} forgot password failure\n */\nexport function forgotPasswordFails(error) {\n  return {\n    type: FORGOT_PASSWORD_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} reset password\n */\nexport function resetPasswordBegins() {\n  return {\n    type: RESET_PASSWORD_BEGINS\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} reset password success\n */\nexport function resetPasswordSuccess(message) {\n  return {\n    type: RESET_PASSWORD_SUCCESS,\n    message,\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} forgot password failure\n */\nexport function resetPasswordFails(error) {\n  return {\n    type: RESET_PASSWORD_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} get users\n */\nexport function getUsersBegins() {\n  return {\n    type: GET_USERS_BEGINS\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} get users success\n */\nexport function getUsersSuccess(data, message) {\n  return {\n    type: GET_USERS_SUCCESS,\n    data,\n    message,\n  };\n}\n\n\n/**\n * @export\n * @param {any} error\n * @returns {error} get users failure\n */\n export function getUsersFails(error) {\n  return {\n    type: GET_USERS_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} get user\n */\n export function getUserBegins() {\n  return {\n    type: GET_USER_BEGINS\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} get user success\n */\nexport function getUserSuccess(data, message) {\n  return {\n    type: GET_USER_SUCCESS,\n    data,\n    message,\n  };\n}\n\n\n/**\n * @export\n * @param {any} error\n * @returns {error} get user failure\n */\n export function getUserFails(error) {\n  return {\n    type: GET_USER_FAILURE,\n    error\n  };\n}\n\n\n/**\n * @export\n * @param {any}\n * @returns {null} update access data begins\n */\nexport function updateUserBegins() {\n  return {\n    type: UPDATE_USER_BEGINS,\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} update user success message\n */\nexport function updateUserSuccess(message, data, id) {\n  return {\n    type: UPDATE_USER_SUCCESS,\n    message,\n    data,\n    id\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} error message\n */\nexport function updateUserFails(error) {\n  return {\n    type: UPDATE_USER_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} update access data begins\n */\n export function updateUserProfileBegins() {\n  return {\n    type: UPDATE_USER_PROFILE_BEGINS,\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} update user success message\n */\nexport function updateUserProfileSuccess(message, data, id) {\n  return {\n    type: UPDATE_USER_PROFILE_SUCCESS,\n    message,\n    data,\n    id\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} error message\n */\nexport function updateUserProfileFails(error) {\n  return {\n    type: UPDATE_USER_PROFILE_FAILURE,\n    error\n  };\n}\n/**\n * @export\n * @param {userId}\n * @returns {null} delete user\n */\nexport function deleteUserBegins() {\n  return {\n    type: DELETE_USER_BEGINS\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} delete users success\n */\nexport function deleteUserSuccess(id, message) {\n  return {\n    type: DELETE_USER_SUCCESS,\n    id,\n    message,\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} delete users failure\n */\nexport function deleteUserFails(error) {\n  return {\n    type: DELETE_USER_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any} history\n * @returns {void}\n */\nexport function logout(history) {\n  return dispatch => {\n    localStorage.removeItem('x-access-token');\n    localStorage.removeItem('user')\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n    // dispatch(getProjectsSuccess({}))\n    // history.push('/login');\n    history.push('/login')\n    toast.success('You have logged out successfully');\n  };\n}\n\n\n/**\n * @export\n * @param {any}\n * @returns {message} invite user begins\n */\nexport function inviteUserBegins() {\n  return {\n    type: INVITE_USER_BEGINS,\n  };\n}\n\n/**\n * @export\n * @param {string} message, user\n * @returns {message} invite user success\n */\nexport function inviteUserSuccess(message, data) {\n  return {\n    type: INVITE_USER_SUCCESS,\n    message,\n    data\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {error} invite user fails\n */\nexport function inviteUserFails(error) {\n  return {\n    type: INVITE_USER_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {message} remove user begins\n */\nexport function removeUserBegins() {\n  return {\n    type: REMOVE_USER_BEGINS,\n  };\n}\n\n/**\n * @export\n * @param {string} message, user\n * @returns {message} remove user success\n */\nexport function removeUserSuccess(message, data) {\n  return {\n    type: REMOVE_USER_SUCCESS,\n    message,\n    data\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {error} remove user fails\n */\nexport function removeUserFails(error) {\n  return {\n    type: REMOVE_USER_FAILURE,\n    error\n  };\n}\n\n\n/**\n * @export\n * @param {any} userData\n * @param {any} history\n * @returns {function(*): Promise<AxiosResponse<T>>} logged in user\n */\nexport function login(userData, history) {\n\n  return (dispatch) => axios.post(BASE_API_URL + '/login', userData)\n    .then((response) => {\n      const token = response.data.data.token;\n      const user = response.data.data;\n      localStorage.setItem('x-access-token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setAuthorizationToken(token);\n      dispatch(setCurrentUser(user));\n      toast.success('You are signed In');\n      history.push('/');\n\n    })\n    .catch((err) => {\n      const error = err.response.errors ? Object.values(err.response.data.errors).join(', ') : err.response.data.message;\n      dispatch(setCurrentUserFails(error));\n      toast.error(\"Incorrect username/password\");\n    });\n}\n\n/**\n * @export\n * @param {any} userData\n * @param {any} history\n * @returns {user} newly created and logged in user\n */\nexport function signup(userData, token, history) {\n  return (dispatch) => axios.post(BASE_API_URL + `/api/signup/${token}`, userData)\n    .then((response) => {\n      dispatch(setNewUser(response.data.message));\n      toast.success('Sign up was successful. Kindly confirm your email and sign in');\n      history.push('/sign-in');\n    })\n    .catch((err) => {\n      let error = err.response.data.errors ? Object.values(err.response.data.errors).join(', ') : err.response.data.message;\n      dispatch(setNewUserFails(err.response.data.message));\n      toast.error(error);\n    });\n}\n\n/**\n * @export\n * @param {any} history\n * @returns {user} get new forge token for viewer\n */\nexport function getForgeToken() {\n\n  return (dispatch) => axios.get( BASE_API_URL + '/forge/oauth/token')\n      .then((response) => {\n        dispatch(getForgeAccessToken(response.data));\n      })\n      .catch((error) =>\n        error\n      );\n}\n\n/**\n * @export\n * @param {any} history\n * @returns {user} get new forge token for viewer\n */\nexport function getModelData() {\n  return (dispatch) => axios.get( BASE_API_URL + '/forge/mysqlsetup')\n    .then((response) => {\n      dispatch(getForgeAccessToken(response.data));\n    })\n    .catch((error) =>{\n        dispatch(getForgeAccessTokenFails(error));\n    });\n}\n\n\n\n/**\n * @export\n * @param {any} history\n * @returns {user} get new forge token for viewer\n */\nexport function getModelAssetsData(modelId) {\n  return (dispatch) => axios.get( BASE_API_URL + '/model-components/model/'+ modelId)\n    .then((response) => {\n      return dispatch(getAssetData(response.data.data));\n    })\n    .catch((error) =>{\n      dispatch(getAssetDataFails(error));\n    }\n\n    );\n}\n\nfunction formatData (data) {\n  let results = [];\n  for(let element in data){\n    if(data[element] !== undefined){\n      let result = element+ '=\\\"'+data[element] + '\\\"';\n      results.push(result);\n    }\n  }\n  return results;\n\n}\n/**\n * @export\n * @param {any} history\n * @returns {user} get new forge token for viewer\n */\nexport function updateModelAssetsData(id, data, stateId) {\n\n  return (dispatch) => {\n    dispatch(updateAssetDataBegins())\n    return axios.put(BASE_API_URL + `/model-components/${stateId}`, data\n    )\n      .then(function (response) {\n        toast.success(\"Update completely successfully\");\n        dispatch(updateAssetData(response.data.message, data, stateId));\n\n      })\n      .catch(function (error) {\n        let errorMessage = error.response.data.errors ? error.response.data.errors.message : error.response.data.error\n        dispatch(updateAssetDataFails(errorMessage));\n        toast.error(errorMessage)\n      });\n  }\n}\n\n\n/**\n * @export\n * @param {any} history\n * @returns {user} invite user\n */\nexport function inviteUser(data) {\n  return (dispatch) => {\n    dispatch(inviteUserBegins())\n    return axios.post(BASE_API_URL + \"/invite-user\", data)\n      .then(function (response) {\n        toast.success(\"Invite sent successfully\");\n        dispatch(inviteUserSuccess(\"Invite sent successfully\", response.data.data ));\n\n      })\n      .catch(function (error) {\n        // console.log(error.response);\n        let errorMessage = error.response.data.errors ? error.response.data.errors.message : error.response.data.message\n        dispatch(inviteUserFails(errorMessage));\n        toast.error(errorMessage)\n      });\n  }\n}\n\n/**\n * @export\n * @param {any} history\n * @returns {user} invite user\n */\nexport function removeUser(data) {\n  return (dispatch) => {\n    dispatch(removeUserBegins())\n    return axios.post(BASE_API_URL + \"/remove-user\", data)\n      .then(function (response) {\n        // console.log(response);\n        toast.success(\"User removed from project successfully\");\n        dispatch(removeUserSuccess(\"User removed from project successfully\", response.data.data ));\n\n      })\n      .catch(function (error) {\n        // console.log(error.response);\n        let errorMessage = error.response.data.errors ? error.response.data.errors.message : error.response.data.message\n        dispatch(removeUserFails(errorMessage));\n        toast.error(errorMessage)\n      });\n  }\n}\n\n/**\n * @export\n * @param {any} history\n * @returns {user} change password\n */\nexport function changePassword(data) {\n  return (dispatch) => {\n    dispatch(changePasswordBegins())\n    return axios.put(BASE_API_URL + \"/users/password\", data)\n      .then(function (response) {\n        if(response.status === 204){\n          toast.success(\"Password changed successfully\");\n          dispatch(changePasswordSuccess('Password changed successfully'));\n        }\n\n      })\n      .catch(function (error) {\n        let errorMessage = error.response.data.errors ? error.response.data.errors.message : error.response.data.message\n        dispatch(changePasswordFails(errorMessage));\n        toast.error(errorMessage)\n      });\n  }\n}\n\n\n/**\n * @export\n * @param {any} history\n * @returns {user} forgot password\n */\nexport function forgotPassword(data) {\n  return (dispatch) => {\n    dispatch(forgotPasswordBegins())\n    return axios.post(BASE_API_URL + \"/password/request-reset\", data)\n      .then(function (response) {\n          toast.success(response.data.message);\n          dispatch(forgotPasswordSuccess(response.data.message));\n\n      })\n      .catch(function (error) {\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(forgotPasswordFails(errorMessage));\n        toast.error(errorMessage)\n      });\n  }\n}\n\n/**\n * @export\n * @param {any} history\n * @returns {user} reset password\n */\nexport function resetPassword(data, history) {\n  return (dispatch) => {\n    dispatch(resetPasswordBegins())\n    return axios.post(BASE_API_URL + \"/reset-password\", data)\n      .then(function (response) {\n        toast.success(\"Password reset successful\");\n        dispatch(resetPasswordSuccess(\"Password reset successful\"));\n        history.push(\"/login\");\n      })\n      .catch(function (error) {\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(resetPasswordFails(errorMessage));\n        toast.error(errorMessage)\n      });\n  }\n}\n\n/**\n * @export\n * @param {any}\n * @returns {user} get users\n */\nexport function getUsers() {\n  return (dispatch) => {\n    dispatch(getUsersBegins())\n    return axios.get(BASE_API_URL + \"/users\")\n      .then(function (response) {\n        dispatch(getUsersSuccess(response.data.data, response.data.message));\n\n      })\n      .catch(function (error) {\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(getUsersFails(errorMessage));\n      });\n  }\n}\n\n/**\n * @export\n * @param {any}\n * @returns {user} get user\n */\n export function getUser(userId) {\n  return (dispatch) => {\n    dispatch(getUserBegins())\n    return axios.get(BASE_API_URL + \"/user/\"+ userId)\n      .then(function (response) {\n        dispatch(getUserSuccess(response.data.data, response.data.message));\n\n      })\n      .catch(function (error) {\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(getUserFails(errorMessage));\n      });\n  }\n}\n\n/**\n * @export\n * @param {userId}\n * @returns {message} delete user\n */\nexport function deleteUser(userId) {\n\n  return (dispatch) => {\n    dispatch(deleteUserBegins())\n    return axios.delete(BASE_API_URL + `/user/${userId}`)\n      .then((response) => {\n        dispatch(deleteUserSuccess( userId, \"User deleted successfully\",));\n        toast.success(\"User deleted successfully\");\n      })\n      .catch((error) => {\n        console.log(error.response);\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(deleteUserFails(errorMessage));\n        toast.error(errorMessage);\n      });\n  }\n}\n/**\n * @export\n * @param {userId}\n * @returns {message} update user\n */\nexport function updateUser(data, userId) {\n\n  return (dispatch) => {\n    dispatch(updateUserBegins())\n    return axios.put(BASE_API_URL + `/user/${userId}`, data)\n      .then((response) => {\n        // console.log(response);\n        dispatch(updateUserSuccess(\"User updated successfully\", response.data.data,  userId ));\n        toast.success(\"User updated successfully\");\n      })\n      .catch((error) => {\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(updateUserFails(errorMessage));\n        toast.error(errorMessage);\n      });\n  }\n}\n\n/**\n * @export\n * @param {userId}\n * @returns {message} update user\n */\n export function updateUserProfile(data, userId) {\n\n  return (dispatch) => {\n    dispatch(updateUserProfileBegins())\n    return axios.put(BASE_API_URL + `/user/${userId}`, data)\n      .then((response) => {\n        // console.log(response);\n        dispatch(updateUserProfileSuccess(\"User updated successfully\", response.data.data,  userId ));\n        toast.success(\"User updated successfully\");\n      })\n      .catch((error) => {\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(updateUserProfileFails(errorMessage));\n        toast.error(errorMessage);\n      });\n  }\n}","const Config = {\n    BASE_API_URL : \"https://advancedlogisticsapi-nqt92.ondigitalocean.app/api\"\n    // BASE_API_URL : \"http://localhost:4000/api\",\n    // BASE_API_URL: \"https://adims.herokuapp.com/api\"\n}\n\nexport default Config","import axios from 'axios';\n\nconst setAuthorizationToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common['x-access-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-access-token'];\n  }\n};\n\nexport default setAuthorizationToken;\n"],"sourceRoot":""}