{"version":3,"sources":["views/pages/modelAsset/ModelAsset.js","../node_modules/multiselect-react-dropdown/dist/index.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx"],"names":["fields","categoryRole","design","delivery","manufacture","installation","ModelAsset","props","useState","modal","setModal","setModelId","editModal","setEditModal","project","setProject","projects","useSelector","state","assetFields","setFields","asset","setAsset","selectedOption","setSelected","editable","itemsPerPage","setItemsPerPage","assets","model","dispatch","useDispatch","isValid","values","touched","errors","formState","setFormState","excludes","fieldsA","length","concat","Object","keys","slice","loggedInUser","auth","user","useEffect","model_id","match","params","modelId","find","item","id","Number","getModelAssetsData","handleChange","event","preventDefault","target","name","type","checked","value","handleSelected","selected","map","modelAssets","filter","includes","key","index","className","editModalAssets","xs","m","lg","htmlFor","onChange","placeholder","disabled","role","required","title","options","onSelect","onRemove","showCheckbox","selectedValues","closeOnSelect","displayValue","e","items","pagination","tableFilter","sorter","hover","sm","addTableClasses","scopedSlots","color","variant","onClick","openModal","customClasses","openEditModal","replace","toLowerCase","show","onClose","size","closeButton","onSubmit","updateModelAssetsData","align","module","exports","require","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","close","cancel","Multiselect","inputValue","filteredOptions","unfilteredOptions","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","n","searchWrapper","React","createRef","searchBox","_this","bind","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","isVisible","Component","this","groupBy","singleSelect","groupByOptions","Promise","resolve","_this2","setState","initialSetValue","current","addEventListener","prevProps","prevSelectedvalues","JSON","stringify","focus","clearTimeout","removeEventListener","skipCheck","isObject","optionList","findIndex","v","indexOf","reduce","r","a","push","create","onSearch","_this3","matchValues","i","search","caseSensitiveSearch","toString","keyCode","disablePreSelectedValues","previousState","splice","_this4","selectionLimit","onSingleSelect","_this5","emptyRecordMsg","loadingMessage","loading","Fragment","obj","option","_this6","readOnly","_this7","customCloseIcon","_this8","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","contains","_this9","hidePlaceholder","disable","showArrow","onKeyDown","autoComplete","renderOptionList","defaultProps"],"mappings":"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","file":"static/js/16.d77b9bf7.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CDataTable,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel, CModal, CModalHeader, CModalBody,\n  CRow, CModalFooter, CCardHeader\n} from '@coreui/react'\nimport Multiselect from 'multiselect-react-dropdown';\nimport {getModelAssetsData, updateModelAssetsData} from \"../../../actions/authActions\";\nimport CIcon from \"@coreui/icons-react\";\n\n\nconst fields = ['actions'];\nconst categoryRole = {\n  design: \"DesPh\",\n  delivery: \"DelPh\",\n  manufacture: \"ManPh\",\n  installation: \"InsPh\"\n}\n\n\nconst ModelAsset = (props) => {\n\n  const [modal, setModal] = useState(false);\n  const [modelId, setModelId] = useState(0);\n  const [editModal, setEditModal] = useState(false);\n  const [project, setProject] = useState({});\n  const projects = useSelector(state => state.project.projects)\n  const [assetFields, setFields] = useState([]);\n  const [asset, setAsset] = useState({});\n  const [selectedOption, setSelected] = useState(null);\n  const [editable, setEditable] = useState(false);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const assets = useSelector(state => state.model.assets);\n  const dispatch = useDispatch();\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  \n\n  const excludes = ['id', 'model', 'models_id', 'createdAt', 'updatedAt', 'qr_code', 'lastModifiedBy'];\n  const fieldsA = assets && assets.length > 0 ?  ['id', 'status'].concat(Object.keys(assets[0]).slice(2,5)).concat(fields) : [];\n  \n  const loggedInUser = useSelector(state => state.auth.user);\n\n  useEffect( () => {\n  \n    const model_id = props.match.params.modelId;\n    let project = projects && projects.length > 0 ? projects.find(item => !!item.model && item.model.id === Number(props.match.params.modelId)) : null;\n    setProject(project);\n    setModelId(model_id);\n    setFormState(formState => ({\n      ...formState,\n    }));\n    if(Object.keys(formState.values).length === 0){\n      dispatch(getModelAssetsData(model_id));\n    }\n\n  }, [dispatch, formState.values, props.match.params.modelId, projects]);\n   \n\n  const handleChange = event => {\n    event.preventDefault();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n  const handleNumChange = (e) => {\n    setItemsPerPage(Number(e.target.value));\n  }\n\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    dispatch(updateModelAssetsData(formState.values[\"TIES_0105_DesPh_UniqueAssetID\"], formState.values, asset['id']));\n  };\n\n\n  const openModal =(item)=> {\n    setModal(true);\n    setAsset(item);\n  }\n\n  const openEditModal =(item)=> {\n    setEditModal(true);\n    setAsset(item);\n    setFormState({\n      values: item\n    });\n  }\n  const  handleSelected = (selected) => {\n    setSelected({ selected });\n    setFields(['id', 'status'].concat(selected.map((item) =>item.value)).concat(['actions']))\n  };\n\n  const modelAssets = asset ?  Object.keys(asset).filter(item => !excludes.includes(item)).map((key, index) => {\n  \n  return (\n    <div key={key}>\n      <CLabel className=\"font-weight-bold\">{key}</CLabel>: <CLabel>{asset[key]}</CLabel>\n    </div>\n  )})\n   : null;\n\n  const editModalAssets = asset ?  Object.keys(asset).filter(item => !excludes.includes(item)).map((key, index) => {\n      return (\n        <CCol xs=\"12\" m=\"12\" lg=\"12\" key={key} className=\"\">\n          <CFormGroup className={'mt-2 d-block'}>\n            <CRow>\n              <CCol lg=\"5\"><CLabel htmlFor={key} className=\"font-weight-bold text-left\">{key}</CLabel></CCol>\n              <CCol lg=\"7\"><CInput\n              type=\"text\"\n              id={key+index}\n              name={key}\n              onChange={handleChange}\n              placeholder=\"\"\n              value={formState.values[key] || ''}\n              className={\"\"}\n              disabled={loggedInUser && loggedInUser.role !== 'admin' ? !key.includes(categoryRole[loggedInUser.role]): editable}\n              required\n            /></CCol>\n            </CRow>\n            </CFormGroup>\n        </CCol>\n      )})\n    : null;\n\n  return (\n    <>\n    \n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader className=\"d-flex flex-row justify-between\">\n              <div>\n              <h4 className=\"pt-3 mr-20 float-left\">{project ? project.title : null}</h4></div>\n              <div className=\"d-inline-flex mr-24 ml-24\">\n                <span><i className=\"fa fa-cog pr-2 pt-3\"></i></span>\n                <span>\n                  {assets && assets.length > 0 ? \n              \n                      <Multiselect\n                   \n                    options={Object.keys(assets[0]).filter(item => !excludes.includes(item)).map((item, id) => {return {value: item, key: id}})}\n                    placeholder={\"Select\"}\n                    onSelect={handleSelected} // Function will trigger on select event\n                    onRemove={handleSelected}\n                    showCheckbox={true}\n                    selectedValues={selectedOption}\n                    closeOnSelect={false}\n                    displayValue=\"value\" // Property name to display in the dropdown options\n                   \n                     /> \n                  : null }\n                </span>\n                <span className=\"pt-2 pl-4\">\n                  <i className=\"fa fa-sliders-h\"></i>\n                  <select aria-label=\"Select items per page\" onChange={handleNumChange} name=\"itemsPerPage\" value={itemsPerPage}>\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                  </select>\n                </span>\n\n              </div>\n             \n            </CCardHeader>\n            <CCardBody className=\"overflow-hidden\">\n              {assets && assets.length > 0 ?\n                <CDataTable\n                  items={assets}\n                  fields={assetFields && assetFields.length > 0 ? assetFields: fieldsA}\n                  itemsPerPage={itemsPerPage}\n                  pagination\n                  tableFilter\n                  sorter\n                  hover\n                  sm\n                  addTableClasses={\"assetsTable\"}\n                  scopedSlots = {{\n                    'actions':\n                      (item, index)=>{\n                        return (\n                          <td className=\"py-2\">\n                            <CButton className=\"pl-6\" color=\"info\" variant=\"ghost\" onClick={() => openModal(item)}><CIcon name=\"cil-notes\" customClasses=\"c-sidebar-nav-icon\"/></CButton>\n                            <CButton className=\"pl-6 px-3\" color=\"primary\" variant=\"ghost\" onClick={() => openEditModal(item)}><CIcon name=\"cil-pencil\" color=\"info\" customClasses=\"c-sidebar-nav-icon\" /></CButton>\n                          </td>\n                        )\n                      },\n                    'id':\n                      (item, index)=> {\n                        return (\n                          <td>{index+1}</td>\n                        )\n                      },\n                      'status':\n                      (item, index) => {\n                        return (\n                          <td><span className={item['TIES_0116_DesPh_Status'].replace(/\\s/g, \"\").toLowerCase()}></span>{item['TIES_0116_DesPh_Status']}</td>\n                        )\n                      }\n\n                  }}\n\n                /> : <div>No asset data !!!</div>\n\n              }\n            </CCardBody>\n          </CCard>\n          <CModal\n            show={modal}\n            onClose={setModal}\n            size=\"lg\"\n          >\n            <CModalHeader closeButton> {asset ? \"Asset: \"+ asset[\"TIES_0101_DesPh_Category\"] : \"Asset Info\"}</CModalHeader>\n            <CModalBody>\n              {modelAssets}\n            </CModalBody>\n          </CModal>\n          <CModal\n            show={editModal}\n            onClose={setEditModal}\n            size=\"lg\"\n          >\n            <CModalHeader closeButton> {asset ? \"Asset: \"+ asset[\"TIES_0101_DesPh_Category\"] : \"Asset Info\"}</CModalHeader>\n            <CModalBody>\n              <CForm className=\"form-horizontal\" onSubmit={handleUpdate}>\n              <CRow>\n                  {editModalAssets}\n                <CModalFooter align=\"right\">\n                  <CButton className=\"text-white bg-info\" type=\"submit\" >Submit</CButton>{' '}\n                  <CButton\n                    color=\"secondary\"\n                    onClick={() =>  setEditModal(false)}\n                  >Cancel</CButton>\n                </CModalFooter>\n              </CRow>\n\n              </CForm>\n            </CModalBody>\n          </CModal>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default ModelAsset;\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport { IMultiselectProps } from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: { options: never[]; disablePreSelectedValues: boolean; selectedValues: never[]; isObject: boolean; displayValue: string; showCheckbox: boolean; selectionLimit: number; placeholder: string; groupBy: string; style: {}; emptyRecordMsg: string; onSelect: () => void; onRemove: () => void; closeIcon: string; singleSelect: boolean; caseSensitiveSearch: boolean; id: string; closeOnSelect: boolean; avoidHighlightFirstOption: boolean; hidePlaceholder: boolean; showArrow: boolean; keepSearchTerm: boolean; };\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t} \n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n    \n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={`option${i}`}\n\t\t\t\t\t\t\tstyle={style['option']}\n              className={`\n               groupChildEle ${this.fadeOutSelection(option) && 'disableSelection'}\n                ${this.isDisablePreSelectedValues(option) && 'disableSelection'} option\n              `}\n\t\t\t\t\t\t\tonClick={() => this.onSelectItem(option)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{showCheckbox && !singleSelect && (\n                  <input\n                    type=\"checkbox\"\n                    className={'checkbox'}\n                    readOnly\n                    checked={this.isSelectedValue(option)}\n                  />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{isObject ? option[displayValue] : (option || '').toString()}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`\n              ${highlightOption === i ? `highlightOption highlight` : \"\"} \n              ${this.fadeOutSelection(option) && 'disableSelection'} \n              ${this.isDisablePreSelectedValues(option) && 'disableSelection'} option\n            `}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={this.isSelectedValue(option)}\n              />\n            )}\n            {isObject ? option[displayValue] : (option || '').toString()}\n          </li>\n    ));\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {!isObject ? (value || '').toString() : value[displayValue]}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.toggelOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, hidePlaceholder, disable, showArrow} = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`} \n          ref={this.searchWrapper} style={style['searchBox']} \n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className=\"searchBox\"\n            id={`${id || 'search'}_input`}\n            onChange={this.onChange}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && <img\n            src={DownArrow}\n            className={`icon_cancel icon_down_dir`}\n          />}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.renderMultiselectContainer();\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: ''\n};\n"],"sourceRoot":""}