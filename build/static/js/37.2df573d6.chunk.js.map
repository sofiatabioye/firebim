{"version":3,"sources":["views/pages/viewer/viewer.js"],"names":["Viewer","useState","view","setViewable","urn","handleTokenRequested","useDispatch","onAccessToken","a","console","log","access_token","expires_in","token_type","token","className","version","headless","onViewerError","error","onTokenRequest","onDocumentLoad","doc","viewables","length","onDocumentError","viewer","onModelLoad","model","onModelError"],"mappings":"oOA6GeA,UAtGC,WAEd,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAgEMC,GAhEN,KAGiBC,cA6DS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDAC3BC,QAAQC,IAAI,mCACRH,EAFuB,gCAVlB,CACLI,aAAa,GACbC,WAAY,GACZC,WAAY,UAOW,QAGrBC,EAHqB,SAKvBP,EACEO,EAAMH,aAAcG,EAAMF,YANL,2CAAH,uDAY1B,OADAH,QAAQC,IAAIN,EAAK,qBAEf,mCACE,qBAAKW,UAAU,cAAf,SAEE,cAAC,IAAD,CACEC,QAAQ,MACRZ,IAAKA,EACLF,KAAMA,EACNe,UAAU,EACVC,cAjEkB,SAACC,GACzBV,QAAQC,IAAI,0BAiENU,eAAgBf,EAChBgB,eA7DqB,SAACC,EAAKC,GACjCd,QAAQC,IAAIa,EAAW,sBACE,IAArBA,EAAUC,OAEZf,QAAQU,MAAM,mCAIdhB,EAAYoB,EAAU,KAsDlBE,gBAjDoB,SAACC,EAAQP,GACnCV,QAAQC,IAAI,6BAiDNiB,YA9CkB,SAACD,EAAQE,GACjCnB,QAAQC,IAAI,gBAAiBkB,IA8CvBC,aA1CiB,SAACH,EAAQP,GAChCV,QAAQC,IAAI","file":"static/js/37.2df573d6.chunk.js","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ForgeViewer from 'react-forge-viewer';\nimport axios from \"axios\";\n\nconst BASE_API_URL = \"http://localhost:4000/api\";\n\nconst  Viewer = () => {\n\n  const [view, setViewable] = useState(null);\n  const [urn, setUrn] = useState('');\n\n\n  const dispatch = useDispatch();\n\n  // useEffect( () => {\n  //   // dispatch(await getModelData);\n  //   async function showModel() {\n  //     axios.get( BASE_API_URL + '/forge/mysqlsetup')\n  //       .then((response) => {\n  //         setUrn(response.data.urn);\n  //       })\n  //       .catch((error) =>\n  //         error\n  //       );\n  //   }\n  //   showModel()\n  // }, [dispatch]);\n\n\n  const handleViewerError = (error) => {\n    console.log('Error loading viewer.');\n  }\n\n  /* after the viewer loads a document, we need to select which viewable to\n  display in our component */\n  const handleDocumentLoaded = (doc, viewables) => {\n    console.log(viewables, '...document loaded')\n    if (viewables.length === 0) {\n\n      console.error('Document contains no viewables.');\n    }\n    else{\n      //Select the first viewable in the list to use in our viewer component\n      setViewable(viewables[0]);\n\n    }\n  }\n\n  const handleDocumentError = (viewer, error) => {\n    console.log('Error loading a document');\n  }\n\n  const handleModelLoaded = (viewer, model) => {\n    console.log('Loaded model:', model);\n\n  }\n\n  const handleModelError = (viewer, error) => {\n    console.log('Error loading the model.');\n  }\n\n  const getForgeToken = () => {\n\n      return {\n        access_token:'',\n        expires_in: '',\n        token_type: \"Bearer\"\n      };\n\n  }\n\n  /* Once the viewer has initialized, it will ask us for a forge token so it can\n  access the specified document. */\n  const handleTokenRequested = async (onAccessToken) => {\n    console.log('Token requested by the viewer.');\n    if (onAccessToken) {\n      let token = await getForgeToken();\n      if (token)\n        onAccessToken(\n          token.access_token, token.expires_in);\n    }\n\n  }\n\n  console.log(urn, 'urn before render');\n  return  (\n    <>\n      <div className=\"forgeViewer\">\n\n        <ForgeViewer\n          version=\"7.0\"\n          urn={urn}\n          view={view}\n          headless={false}\n          onViewerError={handleViewerError}\n          onTokenRequest={handleTokenRequested}\n          onDocumentLoad={handleDocumentLoaded}\n          onDocumentError={handleDocumentError}\n          onModelLoad={handleModelLoaded}\n          onModelError={handleModelError}\n          />\n\n      </div>\n      </>\n    );\n\n}\n\nexport default Viewer;\n"],"sourceRoot":""}