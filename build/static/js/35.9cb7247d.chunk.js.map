{"version":3,"sources":["views/pages/user/profile.js"],"names":["schema","firstName","length","minimum","maximum","lastName","organisation","message","address","UserProfile","props","dispatch","useDispatch","useState","undefined","selectedFile","setSelectedFile","loggedInUser","useSelector","state","auth","profile","editImage","setEditImage","isValid","values","image","touched","errors","formState","setFormState","hasError","field","handleChange","event","persist","target","name","type","checked","value","files","useEffect","validate","xs","xl","className","size","onSubmit","preventDefault","formData","FormData","Object","keys","append","updateUserProfile","id","src","avatar","fluid","height","width","align","shape","md","span","offset","component","htmlFor","onClick","color","accept","onChange","placeholder","email","disabled","role"],"mappings":"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","file":"static/js/35.9cb7247d.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol, CImg,\n  CRow, CForm, CInputGroup, CInputGroupText, CInput, CButton, CFormText, CLabel\n} from '@coreui/react';\nimport {updateUserProfile} from \"../../../actions/authActions\";\nimport CIcon from \"@coreui/icons-react\";\nimport validate from \"validate.js\";\nimport avatar from '../../images/user.png';\n\nconst schema = {\n  firstName:  {\n    // presence: {allowEmpty: true, message: 'is not required'},\n    length: {\n      minimum: 2,\n      maximum: 32\n    }\n  },\n  lastName: {\n    // presence: {allowEmpty: true, message: 'is not required'},\n    length: {\n      minimum: 2,\n      maximum: 32\n    }\n  },\n  organisation: {\n    // presence: {allowEmpty: true, message: 'is required'},\n    length: {\n      maximum: 45,\n      minimum: 3,\n      message: \"must be at least 3 characters\"\n    },\n  },\n  address: {\n    // presence: {allowEmpty: true, message: 'is required'},\n    length: {\n      maximum: 45,\n      minimum: 3,\n      message: \"must be at least 3 characters\"\n    },\n  }\n\n}\n\n\nconst UserProfile = (props) => {\n  const dispatch = useDispatch();\n  const [inputType, setInputType] = useState('password');\n  const [selectedFile, setSelectedFile] = useState(undefined);\n  const loggedInUser = useSelector(state => state.auth.profile);\n  const [editImage, setEditImage] = useState(false);\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {\n        firstName: loggedInUser ? loggedInUser.firstName : '',\n        lastName: loggedInUser ? loggedInUser.lastName : '',\n        address: loggedInUser ? loggedInUser.address: '',\n        organisation: loggedInUser ? loggedInUser.organisation : '',\n        image:  loggedInUser ? loggedInUser.image : null,\n    \n       },\n    touched: {},\n    errors: {}\n  });\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value,\n        [event.target.name]:\n          event.target.type === 'file'\n            ? setSelectedFile(event.target.files[0])\n            : event.target.value,\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n      \n    }));\n    \n  };\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {},\n    \n    }));\n  }, [formState.values]);\n\n  const handleUpdateProfile = (event) => {\n    event.preventDefault();\n\n    let formData = new FormData();\n   \n    if(formState.isValid && Object.keys(formState.values).length > 0 ) {\n        if(selectedFile !== undefined && selectedFile.size <= 1000000 && editImage === true){\n            formData.append('image', selectedFile);\n        }\n        formData.append('firstName', formState.values.firstName);\n        formData.append('lastName', formState.values.lastName);\n        formData.append('address', formState.values.address);\n        formData.append('organisation', formState.values.organisation);\n        dispatch(updateUserProfile(formData, loggedInUser.id));\n    }\n    \n    setFormState({\n      isValid: false,\n      values: {\n        firstName: formState.values.firstName,\n        lastName: formState.values.lastName,\n        address: formState.values.address,\n        organisation: formState.values.organisation,\n        image: formState.values.image\n       },\n      touched: {},\n      errors: {}\n    });\n    setSelectedFile(undefined);\n    setEditImage(false);\n  }\n\n  return (\n\n    <CRow>\n\n        <CCol xs=\"12\" xl=\"6\" className=\"align-content-center m-auto\">\n          <CCard className=\"card-accent-dark shadow-lg\" size=\"lg\">\n            <CCardHeader className=\"text-center\">\n              <div className=\"d-block my-3\">\n                User Profile\n              </div>\n            </CCardHeader>\n            <CCardBody className=\"text-center\">\n              <CForm onSubmit={handleUpdateProfile}>\n                \n                  <CImg \n                    src={loggedInUser && loggedInUser.image !== null ? \"data:image/png;base64, \" + loggedInUser.image: avatar }\n                    fluid\n                    height={150}\n                    width={150}\n                    align={\"center\"}\n                    shape={\"rounded-circle\"}\n                    className=\"mb-2\" />\n               \n                 <CRow className=\"center text-center\" >\n                    <CCol md={{ span: 6, offset: 3 }}>\n               { editImage ?\n                 <CInputGroup className=\"mb-3 center\" width={\"50%\"}>\n                    <CInputGroupText component=\"image\" htmlFor=\"inputGroupFile01\"><span onClick={()=> setEditImage(!editImage)}><CIcon name=\"cil-x\" color=\"sidebar-dark\" /></span></CInputGroupText>\n                    <CInput type=\"file\" id=\"image\" name=\"image\" accept=\"image/png, image/jpeg, image/jpg\" onChange={handleChange}  />\n                    <div className=\"text-danger\"><CFormText className=\"d-block help-block mt-2 text-danger\">{selectedFile !== undefined && selectedFile.size > 1000000 ? 'File too large! Image cannot be larger than 1MB': null}</CFormText></div>\n                </CInputGroup> : <div onClick={()=> setEditImage(!editImage)}> <CIcon name=\"cil-pencil\" color=\"sidebar-dark\" /> Change Profile Picture</div> }\n                   </CCol>\n                </CRow>\n                <hr/>\n                \n                <CRow className=\"g-3 mb-3 mt-4\">\n                    <CCol xs>\n                        <CLabel htmlFor=\"firstName\" className=\"float-left\">FirstName</CLabel>\n                        <CInput placeholder=\"Enter First name\" aria-label=\"First name\" id=\"firstName\" name=\"firstName\" onChange={handleChange} value={formState.values.firstName || ''} />\n                        <div><CFormText className=\"d-block help-block\"> {hasError('firstName') ? formState.errors.firstName[0] : null} </CFormText></div>\n                    </CCol>\n                    <CCol xs>\n                       <CLabel htmlFor=\"lastName\" className=\"float-left\">LastName</CLabel>\n                        <CInput placeholder=\"Enter Last name\" aria-label=\"Last name\" name=\"lastName\" onChange={handleChange} value={formState.values.lastName || ''} />\n                        <div><CFormText className=\"d-block help-block\"> {hasError('lastName') ? formState.errors.lastName[0] : null} </CFormText></div>\n                    </CCol>\n                    <CCol xs={12}>\n                        <CLabel htmlFor=\"organisation\" className=\"float-left mt-3\">Organisation</CLabel>\n                        <CInput id=\"organisation\" placeholder=\"Organisation name\" name=\"organisation\" onChange={handleChange} value={formState.values.organisation || ''} />\n                        <div><CFormText className=\"d-block help-block\"> {hasError('organisation') ? formState.errors.organisation[0] : null} </CFormText></div>\n                    </CCol>\n                    <CCol xs={12}>\n                        <CLabel htmlFor=\"address\" className=\"float-left mt-3\">Location</CLabel>\n                        <CInput id=\"address\" placeholder=\"Enter your address\" name=\"address\" onChange={handleChange} value={formState.values.address || ''} />\n                        <div><CFormText className=\"d-block help-block\"> {hasError('address') ? formState.errors.address[0] : null} </CFormText></div>\n                    </CCol>\n                    <CCol xs={12}>\n                        <CLabel htmlFor=\"email\" className=\"float-left mt-3\">Email</CLabel>\n                        <CInput id=\"email\" placeholder=\"Enter email address\" name=\"email\" value={loggedInUser? loggedInUser.email : ''} disabled/>\n                    </CCol>\n                    <CCol xs={12}>\n                        <CLabel htmlFor=\"role\" className=\"float-left mt-3\">Role</CLabel>\n                        <CInput id=\"role\" placeholder=\"Enter user role\" name=\"role\"  value={loggedInUser ?  loggedInUser.role : ''} disabled/>\n                    </CCol>\n                </CRow>\n                <CRow>\n                  <CCol xs=\"12\">\n                    <CButton type=\"submit\" className=\"px-4 sidebar-dark text-white\" disabled={!formState.isValid}>Submit</CButton>\n                  </CCol>\n                </CRow>\n              </CForm>\n\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n    </CRow>\n\n\n  )\n}\n\nexport default UserProfile\n"],"sourceRoot":""}