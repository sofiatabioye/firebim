{"version":3,"sources":["views/pages/login/Login.js","actions/authActions.js","config.js","utils/setAuthToken.js"],"names":["schema","email","presence","allowEmpty","message","length","maximum","password","Login","props","useState","isValid","values","touched","errors","formState","setFormState","dispatch","useDispatch","history","useHistory","useEffect","validate","handleChange","event","persist","target","name","type","checked","value","hasError","field","className","onSubmit","e","preventDefault","login","htmlFor","id","placeholder","autoComplete","onChange","disabled","to","BASE_API_URL","Config","setCurrentUser","user","SET_CURRENT_USER","logout","localStorage","removeItem","setAuthorizationToken","push","toast","success","userData","axios","post","then","response","token","data","setItem","JSON","stringify","catch","err","error","Object","join","USER_LOGIN_FAILURE","setCurrentUserFails","getModelAssetsData","modelId","get","GET_ASSET_DATA","GET_ASSET_DATA_FAILS","updateModelAssetsData","stateId","UPDATE_ASSET_DATA_BEGINS","put","UPDATE_ASSET_DATA_SUCCESS","updateAssetData","errorMessage","UPDATE_ASSET_DATA_FAILS","updateAssetDataFails","inviteUser","INVITE_USER_BEGINS","INVITE_USER_SUCCESS","inviteUserSuccess","INVITE_USER_FAILURE","inviteUserFails","removeUser","REMOVE_USER_BEGINS","REMOVE_USER_SUCCESS","removeUserSuccess","REMOVE_USER_FAILURE","removeUserFails","changePassword","CHANGE_PASSWORD_BEGINS","status","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","changePasswordFails","forgotPassword","FORGOT_PASSWORD_BEGINS","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","forgotPasswordFails","resetPassword","RESET_PASSWORD_BEGINS","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILURE","resetPasswordFails","getUsers","GET_USERS_BEGINS","GET_USERS_SUCCESS","GET_USERS_FAILURE","getUsersFails","getUser","userId","GET_USER_BEGINS","GET_USER_SUCCESS","GET_USER_FAILURE","getUserFails","deleteUser","DELETE_USER_BEGINS","delete","DELETE_USER_SUCCESS","console","log","DELETE_USER_FAILURE","deleteUserFails","updateUser","UPDATE_USER_BEGINS","UPDATE_USER_SUCCESS","updateUserSuccess","UPDATE_USER_FAILURE","updateUserFails","updateUserProfile","UPDATE_USER_PROFILE_BEGINS","UPDATE_USER_PROFILE_SUCCESS","updateUserProfileSuccess","UPDATE_USER_PROFILE_FAILURE","updateUserProfileFails","defaults","headers","common"],"mappings":"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","file":"static/js/15.e997773e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {useHistory } from \"react-router\";\nimport validate from 'validate.js';\nimport {login} from '../../../actions/authActions';\n\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true,\n    length: {\n      maximum: 64\n    }\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 128\n    }\n  }\n};\n\nconst Login = props => {\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const dispatch = useDispatch();\n  const history = useHistory()\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(login({email: formState.values.email, password: formState.values.password}, history));\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n  \n \n  return (\n\n    <div className=\"px-5\">\n        <p className=\"text-center text-xl\">Welcome.</p>\n        <form className=\"flex flex-col pt-3 md:pt-8\" onSubmit={handleLogin}>\n            <div className=\"flex flex-col pt-4\">\n                <label htmlFor=\"email\" className=\"text-lg\">Email</label>\n                <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"your@email.com\" className=\"shadow appearance-none border rounded w-full py-3 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" name=\"email\" autoComplete=\"email address\" onChange={handleChange} value={formState.email} />\n                <span>{hasError && hasError['email']? formState.errors.email[0] : null} </span>\n            </div>\n\n            <div className=\"flex flex-col pt-4\">\n                <label htmlFor=\"password\" className=\"text-lg\">Password</label>\n                <input type=\"password\" id=\"password\" placeholder=\"Password\" name=\"password\" className=\"shadow appearance-none border rounded w-full py-3 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" autoComplete=\"current-password\"  onChange={handleChange} value={formState.password}/>\n                <span>{hasError && hasError('password')? formState.errors.password[0] : null} </span>\n            </div>\n\n            <input type=\"submit\" value=\"Log In\" className=\"loginButton text-white font-bold text-lg hover:bg-gray-700 p-2 mt-8\" disabled={!formState.isValid} />\n        </form>\n        <div className=\"text-center pt-5 pb-12\">\n            <p>Forgot your password ? <Link to={\"/forgotpassword\"} className=\"underline font-semibold\">Click here</Link></p>\n        </div>\n    </div>\n\n  )\n}\n\nexport default Login\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\nimport Config from '../config';\n\nimport setAuthorizationToken from '../utils/setAuthToken';\n\n\nimport {\n  SET_CURRENT_USER,\n  USER_SIGNUP_SUCCESS,\n  USER_LOGIN_FAILURE, USER_SIGNUP_FAILURE,\n  INVITE_USER_BEGINS, INVITE_USER_FAILURE, INVITE_USER_SUCCESS,\n  REMOVE_USER_BEGINS, REMOVE_USER_SUCCESS, REMOVE_USER_FAILURE,\n  GET_ACCESS_TOKEN, GET_ACCESS_TOKEN_FAILURE,\n  GET_ASSET_DATA, GET_ASSET_DATA_FAILS,\n  UPDATE_ASSET_DATA_BEGINS,\n  UPDATE_ASSET_DATA_FAILS, UPDATE_ASSET_DATA_SUCCESS,\n  CHANGE_PASSWORD_BEGINS, CHANGE_PASSWORD_SUCCESS, CHANGE_PASSWORD_FAILURE,\n  FORGOT_PASSWORD_BEGINS, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAILURE,\n  RESET_PASSWORD_BEGINS, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAILURE,\n  GET_USERS_BEGINS, GET_USERS_SUCCESS, GET_USERS_FAILURE,\n  GET_USER_BEGINS, GET_USER_SUCCESS, GET_USER_FAILURE,\n  DELETE_USER_BEGINS, DELETE_USER_SUCCESS, DELETE_USER_FAILURE,\n  UPDATE_USER_BEGINS, UPDATE_USER_SUCCESS, UPDATE_USER_FAILURE,\n  UPDATE_USER_PROFILE_BEGINS, UPDATE_USER_PROFILE_SUCCESS, UPDATE_USER_PROFILE_FAILURE\n} from './actionTypes';\n\n\n// const BASE_API_URL = \"https://adims.herokuapp.com/api\";\nconst BASE_API_URL = Config.BASE_API_URL\n// \"https://advancedlogisticsapi-nqt92.ondigitalocean.app/api\";\n\n/**\n * @export\n * @param {{user: any}} user\n * @returns {{type: string, user: string}}  current user\n */\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {{type: string, error: any}} login failure error\n */\nexport function setCurrentUserFails(error) {\n  return {\n    type: USER_LOGIN_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any} message\n * @returns {message} signup success message\n */\nexport function setNewUser(message) {\n  return {\n    type: USER_SIGNUP_SUCCESS,\n    message\n  };\n}\n\n/**\n * @export\n * @param {any} message\n * @returns {message} signup success message\n */\nexport function setNewUserFails(message) {\n  return {\n    type: USER_SIGNUP_FAILURE,\n    message\n  };\n}\n\n/**\n * @export\n * @param {any} message\n * @returns {message} forge token success message\n */\nexport function getForgeAccessToken(token) {\n  return {\n    type: GET_ACCESS_TOKEN,\n    token\n  };\n}\n\n/**\n * @export\n * @param {any} message\n * @returns {message} signup success message\n */\nexport function getForgeAccessTokenFails(message) {\n  return {\n    type: GET_ACCESS_TOKEN_FAILURE,\n    message\n  };\n}\n\n/**\n * @export\n * @param {any} message\n * @returns {message} forge token success message\n */\nexport function getAssetData(data) {\n  return {\n    type: GET_ASSET_DATA,\n    data\n  };\n}\n\n/**\n * @export\n * @param {any} message\n * @returns {message} signup success message\n */\nexport function getAssetDataFails(message) {\n  return {\n    type: GET_ASSET_DATA_FAILS,\n    message\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} update access data begins\n */\nexport function updateAssetDataBegins() {\n  return {\n    type: UPDATE_ASSET_DATA_BEGINS,\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} forge token success message\n */\nexport function updateAssetData(message, data, id) {\n  return {\n    type: UPDATE_ASSET_DATA_SUCCESS,\n    message,\n    data,\n    id\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} error message\n */\nexport function updateAssetDataFails(error) {\n  return {\n    type: UPDATE_ASSET_DATA_FAILS,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} change password\n */\nexport function changePasswordBegins() {\n  return {\n    type: CHANGE_PASSWORD_BEGINS\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} change password success\n */\nexport function changePasswordSuccess(message) {\n  return {\n    type: CHANGE_PASSWORD_SUCCESS,\n    message,\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} change password failure\n */\nexport function changePasswordFails(error) {\n  return {\n    type: CHANGE_PASSWORD_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} forgot password\n */\nexport function forgotPasswordBegins() {\n  return {\n    type: FORGOT_PASSWORD_BEGINS\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} forgot password success\n */\nexport function forgotPasswordSuccess(message) {\n  return {\n    type: FORGOT_PASSWORD_SUCCESS,\n    message,\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} forgot password failure\n */\nexport function forgotPasswordFails(error) {\n  return {\n    type: FORGOT_PASSWORD_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} reset password\n */\nexport function resetPasswordBegins() {\n  return {\n    type: RESET_PASSWORD_BEGINS\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} reset password success\n */\nexport function resetPasswordSuccess(message) {\n  return {\n    type: RESET_PASSWORD_SUCCESS,\n    message,\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} forgot password failure\n */\nexport function resetPasswordFails(error) {\n  return {\n    type: RESET_PASSWORD_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} get users\n */\nexport function getUsersBegins() {\n  return {\n    type: GET_USERS_BEGINS\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} get users success\n */\nexport function getUsersSuccess(data, message) {\n  return {\n    type: GET_USERS_SUCCESS,\n    data,\n    message,\n  };\n}\n\n\n/**\n * @export\n * @param {any} error\n * @returns {error} get users failure\n */\n export function getUsersFails(error) {\n  return {\n    type: GET_USERS_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} get user\n */\n export function getUserBegins() {\n  return {\n    type: GET_USER_BEGINS\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} get user success\n */\nexport function getUserSuccess(data, message) {\n  return {\n    type: GET_USER_SUCCESS,\n    data,\n    message,\n  };\n}\n\n\n/**\n * @export\n * @param {any} error\n * @returns {error} get user failure\n */\n export function getUserFails(error) {\n  return {\n    type: GET_USER_FAILURE,\n    error\n  };\n}\n\n\n/**\n * @export\n * @param {any}\n * @returns {null} update access data begins\n */\nexport function updateUserBegins() {\n  return {\n    type: UPDATE_USER_BEGINS,\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} update user success message\n */\nexport function updateUserSuccess(message, data, id) {\n  return {\n    type: UPDATE_USER_SUCCESS,\n    message,\n    data,\n    id\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} error message\n */\nexport function updateUserFails(error) {\n  return {\n    type: UPDATE_USER_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {null} update access data begins\n */\n export function updateUserProfileBegins() {\n  return {\n    type: UPDATE_USER_PROFILE_BEGINS,\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} update user success message\n */\nexport function updateUserProfileSuccess(message, data, id) {\n  return {\n    type: UPDATE_USER_PROFILE_SUCCESS,\n    message,\n    data,\n    id\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} error message\n */\nexport function updateUserProfileFails(error) {\n  return {\n    type: UPDATE_USER_PROFILE_FAILURE,\n    error\n  };\n}\n/**\n * @export\n * @param {userId}\n * @returns {null} delete user\n */\nexport function deleteUserBegins() {\n  return {\n    type: DELETE_USER_BEGINS\n  };\n}\n\n/**\n * @export\n * @param {any} data\n * @returns {data} delete users success\n */\nexport function deleteUserSuccess(id, message) {\n  return {\n    type: DELETE_USER_SUCCESS,\n    id,\n    message,\n  };\n}\n\n/**\n * @export\n * @param {any} error\n * @returns {error} delete users failure\n */\nexport function deleteUserFails(error) {\n  return {\n    type: DELETE_USER_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any} history\n * @returns {void}\n */\nexport function logout(history) {\n  return dispatch => {\n    localStorage.removeItem('x-access-token');\n    localStorage.removeItem('user')\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n    // dispatch(getProjectsSuccess({}))\n    // history.push('/login');\n    history.push('/login')\n    toast.success('You have logged out successfully');\n  };\n}\n\n\n/**\n * @export\n * @param {any}\n * @returns {message} invite user begins\n */\nexport function inviteUserBegins() {\n  return {\n    type: INVITE_USER_BEGINS,\n  };\n}\n\n/**\n * @export\n * @param {string} message, user\n * @returns {message} invite user success\n */\nexport function inviteUserSuccess(message, data) {\n  return {\n    type: INVITE_USER_SUCCESS,\n    message,\n    data\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {error} invite user fails\n */\nexport function inviteUserFails(error) {\n  return {\n    type: INVITE_USER_FAILURE,\n    error\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {message} remove user begins\n */\nexport function removeUserBegins() {\n  return {\n    type: REMOVE_USER_BEGINS,\n  };\n}\n\n/**\n * @export\n * @param {string} message, user\n * @returns {message} remove user success\n */\nexport function removeUserSuccess(message, data) {\n  return {\n    type: REMOVE_USER_SUCCESS,\n    message,\n    data\n  };\n}\n\n/**\n * @export\n * @param {any}\n * @returns {error} remove user fails\n */\nexport function removeUserFails(error) {\n  return {\n    type: REMOVE_USER_FAILURE,\n    error\n  };\n}\n\n\n/**\n * @export\n * @param {any} userData\n * @param {any} history\n * @returns {function(*): Promise<AxiosResponse<T>>} logged in user\n */\nexport function login(userData, history) {\n\n  return (dispatch) => axios.post(BASE_API_URL + '/login', userData)\n    .then((response) => {\n      const token = response.data.data.token;\n      const user = response.data.data;\n      localStorage.setItem('x-access-token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setAuthorizationToken(token);\n      dispatch(setCurrentUser(user));\n      toast.success('You are signed In');\n      history.push('/');\n\n    })\n    .catch((err) => {\n      const error = err.response.errors ? Object.values(err.response.data.errors).join(', ') : err.response.data.message;\n      dispatch(setCurrentUserFails(error));\n      toast.error(\"Incorrect username/password\");\n    });\n}\n\n/**\n * @export\n * @param {any} userData\n * @param {any} history\n * @returns {user} newly created and logged in user\n */\nexport function signup(userData, token, history) {\n  return (dispatch) => axios.post(BASE_API_URL + `/api/signup/${token}`, userData)\n    .then((response) => {\n      dispatch(setNewUser(response.data.message));\n      toast.success('Sign up was successful. Kindly confirm your email and sign in');\n      history.push('/sign-in');\n    })\n    .catch((err) => {\n      let error = err.response.data.errors ? Object.values(err.response.data.errors).join(', ') : err.response.data.message;\n      dispatch(setNewUserFails(err.response.data.message));\n      toast.error(error);\n    });\n}\n\n/**\n * @export\n * @param {any} history\n * @returns {user} get new forge token for viewer\n */\nexport function getForgeToken() {\n\n  return (dispatch) => axios.get( BASE_API_URL + '/forge/oauth/token')\n      .then((response) => {\n        dispatch(getForgeAccessToken(response.data));\n      })\n      .catch((error) =>\n        error\n      );\n}\n\n/**\n * @export\n * @param {any} history\n * @returns {user} get new forge token for viewer\n */\nexport function getModelData() {\n  return (dispatch) => axios.get( BASE_API_URL + '/forge/mysqlsetup')\n    .then((response) => {\n      dispatch(getForgeAccessToken(response.data));\n    })\n    .catch((error) =>{\n        dispatch(getForgeAccessTokenFails(error));\n    });\n}\n\n\n\n/**\n * @export\n * @param {any} history\n * @returns {user} get new forge token for viewer\n */\nexport function getModelAssetsData(modelId) {\n  return (dispatch) => axios.get( BASE_API_URL + '/model-components/model/'+ modelId)\n    .then((response) => {\n      return dispatch(getAssetData(response.data.data));\n    })\n    .catch((error) =>{\n      dispatch(getAssetDataFails(error));\n    }\n\n    );\n}\n\nfunction formatData (data) {\n  let results = [];\n  for(let element in data){\n    if(data[element] !== undefined){\n      let result = element+ '=\\\"'+data[element] + '\\\"';\n      results.push(result);\n    }\n  }\n  return results;\n\n}\n/**\n * @export\n * @param {any} history\n * @returns {user} get new forge token for viewer\n */\nexport function updateModelAssetsData(id, data, stateId) {\n\n  return (dispatch) => {\n    dispatch(updateAssetDataBegins())\n    return axios.put(BASE_API_URL + `/model-components/${stateId}`, data\n    )\n      .then(function (response) {\n        toast.success(\"Update completely successfully\");\n        dispatch(updateAssetData(response.data.message, data, stateId));\n\n      })\n      .catch(function (error) {\n        let errorMessage = error.response.data.errors ? error.response.data.errors.message : error.response.data.error\n        dispatch(updateAssetDataFails(errorMessage));\n        toast.error(errorMessage)\n      });\n  }\n}\n\n\n/**\n * @export\n * @param {any} history\n * @returns {user} invite user\n */\nexport function inviteUser(data) {\n  return (dispatch) => {\n    dispatch(inviteUserBegins())\n    return axios.post(BASE_API_URL + \"/invite-user\", data)\n      .then(function (response) {\n        toast.success(\"Invite sent successfully\");\n        dispatch(inviteUserSuccess(\"Invite sent successfully\", response.data.data ));\n\n      })\n      .catch(function (error) {\n        // console.log(error.response);\n        let errorMessage = error.response.data.errors ? error.response.data.errors.message : error.response.data.message\n        dispatch(inviteUserFails(errorMessage));\n        toast.error(errorMessage)\n      });\n  }\n}\n\n/**\n * @export\n * @param {any} history\n * @returns {user} invite user\n */\nexport function removeUser(data) {\n  return (dispatch) => {\n    dispatch(removeUserBegins())\n    return axios.post(BASE_API_URL + \"/remove-user\", data)\n      .then(function (response) {\n        // console.log(response);\n        toast.success(\"User removed from project successfully\");\n        dispatch(removeUserSuccess(\"User removed from project successfully\", response.data.data ));\n\n      })\n      .catch(function (error) {\n        // console.log(error.response);\n        let errorMessage = error.response.data.errors ? error.response.data.errors.message : error.response.data.message\n        dispatch(removeUserFails(errorMessage));\n        toast.error(errorMessage)\n      });\n  }\n}\n\n/**\n * @export\n * @param {any} history\n * @returns {user} change password\n */\nexport function changePassword(data) {\n  return (dispatch) => {\n    dispatch(changePasswordBegins())\n    return axios.put(BASE_API_URL + \"/users/password\", data)\n      .then(function (response) {\n        if(response.status === 204){\n          toast.success(\"Password changed successfully\");\n          dispatch(changePasswordSuccess('Password changed successfully'));\n        }\n\n      })\n      .catch(function (error) {\n        let errorMessage = error.response.data.errors ? error.response.data.errors.message : error.response.data.message\n        dispatch(changePasswordFails(errorMessage));\n        toast.error(errorMessage)\n      });\n  }\n}\n\n\n/**\n * @export\n * @param {any} history\n * @returns {user} forgot password\n */\nexport function forgotPassword(data) {\n  return (dispatch) => {\n    dispatch(forgotPasswordBegins())\n    return axios.post(BASE_API_URL + \"/password/request-reset\", data)\n      .then(function (response) {\n          toast.success(response.data.message);\n          dispatch(forgotPasswordSuccess(response.data.message));\n\n      })\n      .catch(function (error) {\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(forgotPasswordFails(errorMessage));\n        toast.error(errorMessage)\n      });\n  }\n}\n\n/**\n * @export\n * @param {any} history\n * @returns {user} reset password\n */\nexport function resetPassword(data, history) {\n  return (dispatch) => {\n    dispatch(resetPasswordBegins())\n    return axios.post(BASE_API_URL + \"/reset-password\", data)\n      .then(function (response) {\n        toast.success(\"Password reset successful\");\n        dispatch(resetPasswordSuccess(\"Password reset successful\"));\n        history.push(\"/login\");\n      })\n      .catch(function (error) {\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(resetPasswordFails(errorMessage));\n        toast.error(errorMessage)\n      });\n  }\n}\n\n/**\n * @export\n * @param {any}\n * @returns {user} get users\n */\nexport function getUsers() {\n  return (dispatch) => {\n    dispatch(getUsersBegins())\n    return axios.get(BASE_API_URL + \"/users\")\n      .then(function (response) {\n        dispatch(getUsersSuccess(response.data.data, response.data.message));\n\n      })\n      .catch(function (error) {\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(getUsersFails(errorMessage));\n      });\n  }\n}\n\n/**\n * @export\n * @param {any}\n * @returns {user} get user\n */\n export function getUser(userId) {\n  return (dispatch) => {\n    dispatch(getUserBegins())\n    return axios.get(BASE_API_URL + \"/user/\"+ userId)\n      .then(function (response) {\n        dispatch(getUserSuccess(response.data.data, response.data.message));\n\n      })\n      .catch(function (error) {\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(getUserFails(errorMessage));\n      });\n  }\n}\n\n/**\n * @export\n * @param {userId}\n * @returns {message} delete user\n */\nexport function deleteUser(userId) {\n\n  return (dispatch) => {\n    dispatch(deleteUserBegins())\n    return axios.delete(BASE_API_URL + `/user/${userId}`)\n      .then((response) => {\n        dispatch(deleteUserSuccess( userId, \"User deleted successfully\",));\n        toast.success(\"User deleted successfully\");\n      })\n      .catch((error) => {\n        console.log(error.response);\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(deleteUserFails(errorMessage));\n        toast.error(errorMessage);\n      });\n  }\n}\n/**\n * @export\n * @param {userId}\n * @returns {message} update user\n */\nexport function updateUser(data, userId) {\n\n  return (dispatch) => {\n    dispatch(updateUserBegins())\n    return axios.put(BASE_API_URL + `/user/${userId}`, data)\n      .then((response) => {\n        // console.log(response);\n        dispatch(updateUserSuccess(\"User updated successfully\", response.data.data,  userId ));\n        toast.success(\"User updated successfully\");\n      })\n      .catch((error) => {\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(updateUserFails(errorMessage));\n        toast.error(errorMessage);\n      });\n  }\n}\n\n/**\n * @export\n * @param {userId}\n * @returns {message} update user\n */\n export function updateUserProfile(data, userId) {\n\n  return (dispatch) => {\n    dispatch(updateUserProfileBegins())\n    return axios.put(BASE_API_URL + `/user/${userId}`, data)\n      .then((response) => {\n        // console.log(response);\n        dispatch(updateUserProfileSuccess(\"User updated successfully\", response.data.data,  userId ));\n        toast.success(\"User updated successfully\");\n      })\n      .catch((error) => {\n        let errorMessage = error.response.data.errors ? error.response.data.message : error.response.data.message\n        dispatch(updateUserProfileFails(errorMessage));\n        toast.error(errorMessage);\n      });\n  }\n}","const Config = {\n    BASE_API_URL : \"https://advancedlogisticsapi-nqt92.ondigitalocean.app/api\"\n    // BASE_API_URL : \"http://localhost:4000/api\",\n    // BASE_API_URL: \"https://adims.herokuapp.com/api\"\n}\n\nexport default Config","import axios from 'axios';\n\nconst setAuthorizationToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common['x-access-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-access-token'];\n  }\n};\n\nexport default setAuthorizationToken;\n"],"sourceRoot":""}